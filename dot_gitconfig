[user]
  name = jrestrepo
  email = jrestrepo@uner.edu.ar

[core]
  editor = nvim
  # Better whitespace handling
  whitespace = trailing-space,space-before-tab
  # Treat trailing whitespace as an error
  autocrlf = input
  # Improve performance on large repos
  preloadindex = true
  fscache = true

[init]
  # Name the default branch "main", not "master". #BlackLivesMatter
  defaultBranch = main

[commit]
  verbose = true
  # Show diff when writing commit message
  status = true

[color]
  ui = auto
  diff = always
  interactive = always
  status = always
  grep = always
  pager = true
  decorate = always
  showbranch = always

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = green
  changed = yellow
  untracked = red

[format]
  pretty = format:%C(yellow)%h %Cblue%>(12)%ad %Cgreen%<(7)%aN%Cred%d %Creset%s

[log]
  # Show dates in relative format
  date = relative
  # Abbreviate commit hashes
  abbrevCommit = true

[diff]
  # Detect renames and copies
  renames = copies
  # Use better diff algorithm
  algorithm = histogram
  # Show submodule changes
  submodule = log
  # Color moved lines differently
  colorMoved = default

[merge]
  # Include summaries of merged commits
  log = true
  # Use diff3 conflict style (shows original)
  conflictstyle = zdiff3
  # Auto-stash before rebase/merge
  autoStash = true

[pull]
  # Rebase by default instead of merge
  rebase = true

[push]
  # Push current branch to upstream
  default = current
  # Push tags automatically
  followTags = true
  # Auto-setup remote branch
  autoSetupRemote = true

[rebase]
  # Automatically stash before rebase
  autoStash = true
  # Automatically squash fixup commits
  autoSquash = true

[fetch]
  # Remove deleted remote branches
  prune = true
  # Prune tags too
  pruneTags = true

[status]
  # Show submodule summary
  submoduleSummary = true
  # Show stash count
  showStash = true

[branch]
  # Auto-setup tracking
  autoSetupMerge = always

[help]
  # Correct typos automatically
  autocorrect = 10

[credential]
  helper = cache --timeout=3600

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true

[alias]
  # List all aliases
  la = "!git config -l | grep alias | cut -c 7-"

  # Basic shortcuts
  co = checkout
  nb = checkout -b
  s = status
  st = status -sb
  sv = status -v

  # Branch operations
  br = branch
  brd = branch -d
  brD = branch -D
  bra = branch -a

  # Commit shortcuts
  c = commit
  ca = commit -a
  cm = commit -m
  cam = commit -am
  amend = commit --amend
  amendn = commit --amend --no-edit

  # Log variations
  l = log --oneline --graph --decorate
  lg = log --graph --abbrev-commit --decorate --all
  ll = log --pretty=format:'%C(yellow)%h%Cred%d %Creset%s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  lol = log --graph --pretty=format:'%C(yellow)%h%Cred%d %Creset%s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --all
  ls = log --stat

  # Diff shortcuts
  d = diff
  ds = diff --staged
  dc = diff --cached

  # Reset shortcuts
  unstage = reset HEAD --
  undo = reset --soft HEAD^
  ghubreset = !git fetch && git reset --hard origin/main
  greset = !git fetch && git reset --hard origin/master

  # Stash shortcuts
  sta = stash
  stp = stash pop
  stl = stash list

  # Show shortcuts
  last = log -1 HEAD --stat
  who = shortlog -sn --

  # Push/Pull shortcuts
  p = push
  pf = push --force-with-lease
  pl = pull

  # Cleanup
  cleanup = !git branch --merged | grep -v '\\*\\|main\\|master' | xargs -n 1 git branch -d

  # Find commits by message
  find = "!f() { git log --all --oneline --grep=\"$1\"; }; f"

  # Find commits by code change
  fc = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn]' --decorate --date=short -S\"$1\"; }; f"

  # Show contributors
  contributors = shortlog --summary --numbered

  # Create new branch and switch to it
  new = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

  # Quick sync with remote
  sync = !git fetch origin && git rebase origin/$(git branch --show-current)

  # Show current branch
  current = rev-parse --abbrev-ref HEAD


